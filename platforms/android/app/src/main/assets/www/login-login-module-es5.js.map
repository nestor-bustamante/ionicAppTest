{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts"],"names":["routes","path","component","LoginPageModule","imports","forChild","declarations","LoginPage","afAuth","toastController","router","fb","platform","google","loading","username","password","isLoggedIn","users","id","name","email","picture","data","url","location","city","state","region_id","gender","friends","getLoginStatus","then","res","console","log","status","catch","e","is","params","login","response","idToken","accessToken","onLoginSuccess","error","alert","JSON","stringify","accessSecret","credential","GoogleAuthProvider","auth","signInWithCredential","navigate","err","message","create","position","color","showCloseButton","closeButtonText","toast","present","authState","subscribe","user","sendEmailVerification","userid","api","window","localStorage","setItem","logout","FacebookAuthProvider","authResponse","info","getUserDetail","userID","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAgBA,QAAaC,eAAe;AAAA;AAAA,KAA5B;;AAAaA,mBAAe,6DAT3B,+DAAS;AACRC,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsBL,MAAtB,CAJO,CADD;AAORM,kBAAY,EAAE,CAAC,qDAAD;AAPN,KAAT,CAS2B,GAAfH,eAAe,CAAf;;;;;;;;;;;;;;;;ACzBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2ECGf;AAKA;AACA;AAIA;;;AAWA,QAAaI,SAAS;AAAA;AAAA;AAMpB,yBACSC,MADT,EAEUC,eAFV,EAGUC,MAHV,EAIE;AACA;AACQC,QANV,EAQUC,QARV,EASUC,MATV,EAS4B;AAAA;;AAAA;;AARnB,aAAAL,MAAA,GAAAA,MAAA;AACC,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AAGA,aAAAC,EAAA,GAAAA,EAAA;AAEA,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AAbV,aAAAC,OAAA,GAAmB,KAAnB;AACA,aAAAC,QAAA,GAAmB,EAAnB;AACA,aAAAC,QAAA,GAAmB,EAAnB;AAyBA,aAAAC,UAAA,GAAa,KAAb;AACA,aAAAC,KAAA,GAAQ;AAAEC,YAAE,EAAE,EAAN;AAAUC,cAAI,EAAE,EAAhB;AAAoBC,eAAK,EAAE,EAA3B;AAA+BC,iBAAO,EAAE;AAAEC,gBAAI,EAAE;AAAEC,iBAAG,EAAE;AAAP;AAAR,WAAxC;AAA+DC,kBAAQ,EAAE;AAAEA,oBAAQ,EAAE;AAAEC,kBAAI,EAAC,EAAP;AAAWC,mBAAK,EAAC,EAAjB;AAAqBC,uBAAS,EAAC;AAA/B;AAAZ,WAAzE;AAA2HC,gBAAM,EAAE,EAAnI;AAAuIC,iBAAO,EAAE;AAAhJ,SAAR;AAbEnB,UAAE,CAACoB,cAAH,GACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACXC,iBAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;;AACA,cAAIH,GAAG,CAACG,MAAJ,KAAe,SAAnB,EAA8B;AAC5B,iBAAI,CAACnB,UAAL,GAAkB,IAAlB;AACD,WAFD,MAEO;AACL,iBAAI,CAACA,UAAL,GAAkB,KAAlB;AACD;AACF,SARH,EASGoB,KATH,CASS,UAAAC,CAAC;AAAA,iBAAIJ,OAAO,CAACC,GAAR,CAAYG,CAAZ,CAAJ;AAAA,SATV;AAUD;;AA3BmB;AAAA;AAAA,mCAgCT,CACT;AACA;AACA;AACD;AApCmB;AAAA;AAAA,gCAsCN;;;;;;;;;;;AAIZJ,2BAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6C,KAAKvB,QAAL,CAAc2B,EAAd,CAAiB,SAAjB,CAA7C;AACA,yBAAKzB,OAAL,GAAe,IAAf;;AACA,wBAAI,KAAKF,QAAL,CAAc2B,EAAd,CAAiB,SAAjB,CAAJ,EAAiC;AAC/BL,6BAAO,CAACC,GAAR,CAAY,KAAKvB,QAAjB;AACA4B,4BAAM,GAAG;AACP,kCAAU,SADH;AAEP,uCAAe,0EAFR;AAGP,mCAAW;AAHJ,uBAAT;AAKD,qBAPD,MAQK;AACHA,4BAAM,GAAG,EAAT;AACD;;AAEDN,2BAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AAEA,2BAAM,KAAK3B,MAAL,CAAY4B,KAAZ,CAAkBD,MAAlB,EACHR,IADG,CACG,UAAAU,QAAQ,EAAI;AACjBR,6BAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BO,QAA1B;AADiB,0BAETC,OAFS,GAEgBD,QAFhB,CAETC,OAFS;AAAA,0BAEAC,WAFA,GAEgBF,QAFhB,CAEAE,WAFA;;AAGjB,4BAAI,CAACC,cAAL,CAAoBF,OAApB,EAA6BC,WAA7B;AAED,qBANG,EAMDP,KANC,CAMK,UAACS,KAAD,EAAgB;AACvBZ,6BAAO,CAACC,GAAR,CAAYW,KAAZ;AACAC,2BAAK,CAAC,YAAYC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAb,CAAL;AACD,qBATG,CAAN;;;;;;;;;AAUD;AApEmB;AAAA;AAAA,uCAsELF,WAtEK,EAsEaM,YAtEb,EAsEgC;AAAA;;AAClD,cAAMC,UAAU,GAAGD,YAAY,GAAG,kDAAcE,kBAAd,CAAiCD,UAAjC,CAA4CP,WAA5C,EAAyDM,YAAzD,CAAH,GAA4E,kDAAcE,kBAAd,CAAiCD,UAAjC,CAA4CP,WAA5C,CAA3G;AAEA,eAAKpC,MAAL,CAAY6C,IAAZ,CAAiBC,oBAAjB,CAAsCH,UAAtC,EACGnB,IADH,CACQ,UAACU,QAAD,EAAc;AAClB,kBAAI,CAAC5B,OAAL,GAAe,KAAf;;AACA,kBAAI,CAACJ,MAAL,CAAY6C,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,WAJH;AAKD;AA9EmB;AAAA;AAAA,qCAgFPC,GAhFO,EAgFF;AAChBtB,iBAAO,CAACC,GAAR,CAAYqB,GAAZ;AACD;AAlFmB;AAAA;AAAA,qCAoFDC,OApFC,EAoFa;;;;;;;;;;AACjB,2BAAM,KAAKhD,eAAL,CAAqBiD,MAArB,CAA4B;AAC9CD,6BAAO,EAAEA,OADqC;AAE9CE,8BAAQ,EAAE,QAFoC;AAG9CC,2BAAK,EAAE,MAHuC;AAI9CC,qCAAe,EAAE,IAJ6B;AAK9CC,qCAAe,EAAE;AAL6B,qBAA5B,CAAN;;;AAARC,yB;AAONA,yBAAK,CAACC,OAAN;;;;;;;;;AACD;AA7FmB;AAAA;AAAA,8CA+FG3C,KA/FH,EA+Fe;AACjC,eAAKb,MAAL,CAAYyD,SAAZ,CAAsBC,SAAtB,CAAiC,UAAAC,IAAI,EAAI;AACvCA,gBAAI,CAACC,qBAAL,GACGpC,IADH,CACQ,YAAM;AACVE,qBAAO,CAACC,GAAR,CAAY,YAAZ;AACD,aAHH;AAID,WALD;AAMD;AAtGmB;AAAA;AAAA,sCAwGNkC,MAxGM,EAwGO;AAAA;;AACzB,eAAK1D,EAAL,CAAQ2D,GAAR,CAAY,MAAMD,MAAN,GAAe,wDAA3B,EAAqF,CAAC,gBAAD,EAAmB,cAAnB,EAAmC,eAAnC,EAAoD,aAApD,EAAmE,iBAAnE,EAAsF,gBAAtF,EAAwG,eAAxG,CAArF,EACGrC,IADH,CACQ,UAAAC,GAAG,EAAI;AACXsC,kBAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,EAAoCxC,GAAG,CAACd,EAAxC;AACA,kBAAI,CAACD,KAAL,GAAae,GAAb;;AACA,kBAAI,CAACvB,MAAL,CAAY6C,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,WALH,EAMGlB,KANH,CAMS,UAAAC,CAAC,EAAI;AACVJ,mBAAO,CAACC,GAAR,CAAYG,CAAZ;AACD,WARH;AASD;AAlHmB;AAAA;AAAA,iCAoHX;AAAA;;AACP,eAAK3B,EAAL,CAAQ+D,MAAR,GACG1C,IADH,CACQ,UAAAC,GAAG;AAAA,mBAAI,MAAI,CAAChB,UAAL,GAAkB,KAAtB;AAAA,WADX,EAEGoB,KAFH,CAES,UAAAC,CAAC;AAAA,mBAAIJ,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CG,CAA1C,CAAJ;AAAA,WAFV;AAGD;AAxHmB;AAAA;AAAA,kCA0HJ;;;;;;;;;;AACd,yBAAKxB,OAAL,GAAe,IAAf;AACA,yBAAKH,EAAL,CAAQ8B,KAAR,CAAc,CAAC,gBAAD,EAAmB,cAAnB,EAAmC,eAAnC,EAAoD,aAApD,EAAmE,iBAAnE,EAAsF,gBAAtF,EAAwG,eAAxG,EAAyH,OAAzH,CAAd,EACGT,IADH,CACQ,UAACC,GAAD,EAAgC;AAEpC,0BAAMkB,UAAU,GAAG,kDAAcwB,oBAAd,CAAmCxB,UAAnC,CAA8ClB,GAAG,CAAC2C,YAAJ,CAAiBhC,WAA/D,CAAnB;AAEA,0EAAgBU,oBAAhB,CAAqCH,UAArC,EACGnB,IADH,CACS,UAAA6C,IAAI,EAAI;AACbN,8BAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,IAA5B,EAAkCzB,IAAI,CAACC,SAAL,CAAe4B,IAAf,CAAlC;;AACA,8BAAI,CAACC,aAAL,CAAmB7C,GAAG,CAAC2C,YAAJ,CAAiBG,MAApC;;AACA,8BAAI,CAACjE,OAAL,GAAe,KAAf;;AACA,8BAAI,CAACJ,MAAL,CAAY6C,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACC,uBANL,EAJoC,CAcpC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,qBAtBH,EAuBGlB,KAvBH,CAuBS,UAAAC,CAAC;AAAA,6BAAIJ,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CG,CAA3C,CAAJ;AAAA,qBAvBV;;;;;;;;;AAwBD;AApJmB;;AAAA;AAAA,OAAtB;;;;cAOmB;;cACU;;cACT;;cAGJ;;cAEM;;cACF;;;;AAfP/B,aAAS,6DALrB,gEAAU;AACTyE,cAAQ,EAAE,WADD;AAETC,cAAQ,EAAR;AAAA;AAAA,uFAFS;;;;AAAA,KAAV,CAKqB,E,+EAOH,kE,EACU,8D,EACT,sD,EAGJ,mE,EAEM,uD,EACF,wE,EAfE,GAAT1E,SAAS,CAAT","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Ingresar</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\" style=\\\"background-color: red;\\\">\\n\\n  <ion-card>\\n\\n    <ion-progress-bar *ngIf=\\\"loading\\\" type=\\\"indeterminate\\\"></ion-progress-bar>\\n\\n    <div class=\\\"ion-padding-top ion-padding-start ion-padding-end\\\">\\n      <h3 class=\\\"ion-no-margin\\\">Accede a la aplicación</h3>\\n    </div>\\n\\n    <!-- \\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Correo</ion-label>\\n        <ion-input type=\\\"mail\\\" [(ngModel)]=\\\"username\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Contraseña</ion-label>\\n        <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n    -->\\n\\n    <div class=\\\"ion-padding-top ion-padding-start ion-padding-end\\\">\\n      <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" color=\\\"primary\\\" (click)=\\\"fbLogin()\\\">\\n        <ion-icon name=\\\"logo-facebook\\\"></ion-icon>\\n        <span class=\\\"ion-padding-start\\\">Ingresar con Facebook</span>\\n      </ion-button>\\n    </div>\\n\\n    <div class=\\\"ion-padding\\\">\\n      <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" color=\\\"danger\\\" (click)=\\\"login()\\\">\\n        <ion-icon name=\\\"logo-google\\\"></ion-icon>\\n        <span class=\\\"ion-padding-start\\\">Ingresar con Google</span>\\n      </ion-button>\\n    </div>\\n\\n  </ion-card>\\n  \\n  <!--\\n    <div class=\\\"ion-padding\\\">¿Eres nuevo? <a href=\\\"register\\\">Regístrate</a></div>\\n  -->\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { AngularFireAuth } from '@angular/fire/auth';\n// import { auth } from 'firebase/app';\nimport * as firebase from 'firebase/app';\n\nimport { ToastController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n// import { EmailComposer } from '@ionic-native/email-composer/ngx';\n// import { SpinnerDialog } from '@ionic-native/spinner-dialog/ngx';\n\nimport { Facebook, FacebookLoginResponse } from '@ionic-native/facebook/ngx';\n\n// import { LoadingController } from '@ionic/angular';\n\nimport { GooglePlus } from '@ionic-native/google-plus/ngx';\nimport { Platform } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  loading: boolean = false;\n  username: string = '';\n  password: string = '';\n\n  constructor(\n    public afAuth: AngularFireAuth,\n    private toastController: ToastController,\n    private router: Router,\n    // private emailComposer: EmailComposer,\n    // private spinnerDialog: SpinnerDialog,\n    private fb: Facebook,\n\n    private platform: Platform,\n    private google: GooglePlus\n  ) {\n    fb.getLoginStatus()\n      .then(res => {\n        console.log(res.status);\n        if (res.status === 'connect') {\n          this.isLoggedIn = true;\n        } else {\n          this.isLoggedIn = false;\n        }\n      })\n      .catch(e => console.log(e));\n  }\n\n  isLoggedIn = false;\n  users = { id: '', name: '', email: '', picture: { data: { url: '' } }, location: { location: { city:'', state:'', region_id:'' }}, gender: '', friends: {}, };\n\n  ngOnInit() {\n    // this.loading = await this.loadingController.create({\n    //   message: 'Connecting ...'\n    // });\n  }\n  \n  async login() {\n\n    let params: any;\n\n    console.log(\"this.platform.is('android'): \", this.platform.is('android'));\n    this.loading = true;\n    if (this.platform.is('android')) {\n      console.log(this.platform);\n      params = {\n        'scopes': 'profile',\n        'webClientId': '417895518758-737c2rn4s51k1is9foq2sv8jdfde7lqk.apps.googleusercontent.com',\n        'offline': true\n      }\n    }\n    else {\n      params = {}\n    }\n\n    console.log('PARAMS: ', params);\n\n    await this.google.login(params)\n      .then( response => {\n        console.log('response: ', response);\n        const { idToken, accessToken } = response\n        this.onLoginSuccess(idToken, accessToken);\n\n      }).catch((error: any) => {\n        console.log(error)\n        alert('error: ' + JSON.stringify(error))\n      });\n  }\n\n  onLoginSuccess(accessToken: any, accessSecret: any) {\n    const credential = accessSecret ? firebase.auth.GoogleAuthProvider.credential(accessToken, accessSecret) : firebase.auth.GoogleAuthProvider.credential(accessToken);\n\n    this.afAuth.auth.signInWithCredential(credential)\n      .then((response) => {\n        this.loading = false;\n        this.router.navigate([\"/home\"]);\n      })\n  }\n\n  onLoginError(err) {\n    console.log(err);\n  }\n\n  async presentToast(message: any) {\n    const toast = await this.toastController.create({\n      message: message,\n      position: 'bottom',\n      color: 'dark',\n      showCloseButton: true,\n      closeButtonText: 'Ok'\n    });\n    toast.present();\n  }\n\n  sendEmailVerification( email: any) {\n    this.afAuth.authState.subscribe( user => {\n      user.sendEmailVerification()\n        .then(() => {\n          console.log('email sent');\n        })\n    });\n  }\n\n  getUserDetail(userid: any) {\n    this.fb.api('/' + userid + '/?fields=id,email,name,picture,gender,friends,location', ['public_profile', 'user_friends', 'user_location', 'user_gender', 'instagram_basic', 'user_age_range', 'user_birthday'])\n      .then(res => {\n        window.localStorage.setItem('user', res.id)\n        this.users = res;\n        this.router.navigate([\"/home\"]);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  logout() {\n    this.fb.logout()\n      .then(res => this.isLoggedIn = false)\n      .catch(e => console.log('Error logout from Facebook', e));\n  }\n\n  async fbLogin() {\n    this.loading = true;\n    this.fb.login(['public_profile', 'user_friends', 'user_location', 'user_gender', 'instagram_basic', 'user_age_range', 'user_birthday', 'email'])\n      .then((res: FacebookLoginResponse) => {\n        \n        const credential = firebase.auth.FacebookAuthProvider.credential(res.authResponse.accessToken);\n\n        firebase.auth().signInWithCredential(credential)\n          .then( info => {\n            window.localStorage.setItem('fb', JSON.stringify(info));\n            this.getUserDetail(res.authResponse.userID);\n            this.loading = false;\n            this.router.navigate(['/home']);\n            }\n          )\n\n\n        // console.log('login res', res);\n        // if (res.status === 'connected') {\n        //   this.isLoggedIn = true;\n        //   this.getUserDetail(res.authResponse.userID);\n        // } else {\n        //   this.isLoggedIn = false;\n        // }\n      })\n      .catch(e => console.log('Error logging into Facebook', e));\n  }\n\n  // com.maptest.myapp\n\n  \n\n  // async login() {\n  //   const { username, password } = this;\n  //   this.spinnerDialog.show();\n  //   try {\n  //     // tipo de hack\n  //     console.log('username, password ', username, password);\n  //     const res = await this.afAuth.auth.signInWithEmailAndPassword(username + '@gmail.com', password).then(data => {\n\n  //       console.log('data: ', data);\n  //       console.log('data.user.emailVerified: ', data.user.emailVerified)\n\n  //       if (data.user.emailVerified) {\n  //         // console.log(res);\n\n  //         this.spinnerDialog.hide();\n\n  //         console.log('logueado!!!');\n\n  //         // let email = {\n  //         //   to: `${username}@gmail.com`,\n  //         //   attachments: [],\n  //         //   subject: 'emailComposer',\n  //         //   body: 'Texto enviado desde la app de ionic',\n  //         //   isHtml: true\n  //         // }\n\n  //         // // Send a text message using default options\n  //         // this.emailComposer.open(email);\n\n  //         this.router.navigate(['/home']);\n  //       } else {\n  //         this.spinnerDialog.hide();\n  //         // this.emailComposer.isAvailable().then((available: boolean) => {\n  //         //   if (available) {\n  //         //     console.log(available);\n  //         //     //Now we know we can send\n  //         //   }\n  //         // });\n\n  //         // console.log(res);\n\n  //         // let email = {\n  //         //   to: `${username}@gmail.com`,\n  //         //   attachments: [],\n  //         //   subject: 'emailComposer',\n  //         //   body: 'Texto enviado desde la app de ionic',\n  //         //   isHtml: true\n  //         // }\n\n  //         // // Send a text message using default options\n  //         // this.emailComposer.open(email);\n  //       }\n  //     });\n\n\n  //     return false;\n\n  //   } catch (err) {\n      \n  //     const errMessages = [\n  //       'Correo inválido',\n  //       'Favor verifique su correo o contraseña'\n  //     ]\n\n  //     if (err.code == \"auth/invalid-email\") {\n  //       this.presentToast(errMessages[0]);\n  //     } else {\n  //       this.presentToast(errMessages[1]);\n  //     }\n  //   }\n    \n  // }\n\n}\n\n\n"]}